Please act as a professional Verilog designer.

Implement a module of a 64-bit subtractor with overflow checking for high-precision arithmetic operations. 

Module name:  
    sub_64bit               
Input ports:
    A [63:0]: First 64-bit input operand (representing a large signed integer).
    B [63:0]: Second 64-bit input operand (representing a large signed integer to be subtracted from A).
Output ports:
    result [63:0]: 64-bit output representing the difference of the two operands (A - B).
    overflow: 1-bit output indicating whether an overflow occurred during the subtraction operation.

Implementation:
Subtraction: The module performs binary subtraction of A and B to obtain the result.
Overflow Detection: The module checks for overflow conditions by examining the sign bits of A, B, and the result. 
- Positive overflow occurs when a positive number (A) is subtracted by a negative number (B) and the result is negative.
- Negative overflow occurs when a negative number (A) is subtracted by a positive number (B) and the result is positive.

The overflow flag is set to 1 if an overflow condition is detected; otherwise, it is set to 0.

Give me the complete code.